// (-- api-linter: core::0203::required=disabled
//     aip.dev/not-precedent: We need to do this to simplify the API. --)

syntax = "proto3";

package coinbase.staking.v1alpha1;

import "coinbase/staking/v1alpha1/common.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.cbhq.net/cloud/staking-client-library-go/gen/go/coinbase/staking/v1alpha1";

// The parameters required to use a durable transaction nonce for Solana transactions.
message NonceOptions {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Nonce Options"}
  };

  // The blockhash stored in the nonce account.
  string nonce = 1;

  // The address of the nonce account.
  string nonce_account = 2;

  // The address of the nonce authority. If not provided, defaults to the nonce_account_address. Signs the transaction.
  string nonce_authority = 3;
}

// The parameters required for the create stake account action on Solana.
message SolanaCreateStakeAccountParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Create Stake Account Parameters"}
  };

  // The address of the new stake account which will be created. This address must not already exist. Signs the transaction.
  string stake_account_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which will fund the stake account. Pays the transaction fee. Signs the transaction.
  // (-- api-linter: core::0140::prepositions=disabled
  //     aip.dev/not-precedent: We need to do this because it's not relevant to our use case. --)
  string from_address = 2 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which will be granted signing authority over staking operations on the new stake account. If not provided, defaults to the from_address.
  string stake_authority = 3 [(google.api.field_behavior) = OPTIONAL];

  // The address of the account which will be granted signing authority over withdrawing inactive stake from the new stake account. If not provided, defaults to the from_address.
  string withdraw_authority = 4 [(google.api.field_behavior) = OPTIONAL];

  // The amount to fund the stake account with, in Lamports.
  Amount amount = 5 [(google.api.field_behavior) = REQUIRED];

  // The parameters required to use a durable transaction nonce for Solana transactions.
  NonceOptions nonce_options = 6 [(google.api.field_behavior) = OPTIONAL];
}

// The parameters required for the delegate stake action on Solana.
message SolanaDelegateStakeParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Delegate Stake Parameters"}
  };

  // The address of the stake account which will be delegating its stake.
  string stake_account_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The address of the validator's vote account to which the stake will be delegated.
  string vote_account_address = 2 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which has signing authority over staking operations on the stake account. Signs the transaction.
  string stake_authority = 3 [(google.api.field_behavior) = REQUIRED];

  // The parameters required to use a durable transaction nonce for Solana transactions.
  NonceOptions nonce_options = 4  [(google.api.field_behavior) = OPTIONAL];
}

// The parameters required for the deactivate stake action on Solana.
message SolanaDeactivateStakeParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Deactivate Stake Parameters"}
  };

  // The address of the stake account which will have its stake deactivated. Stake must be currently active.
  string stake_account_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which has signing authority over staking operations on the stake account. Signs the transaction.
  string stake_authority = 2 [(google.api.field_behavior) = REQUIRED];

  // The parameters required to use a durable transaction nonce for Solana transactions.
  NonceOptions nonce_options = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The parameters required for the withdraw stake action on Solana.
message SolanaWithdrawStakeParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Withdraw Stake Parameters"}
  };

  // The address of the stake account from which stake will be withdrawn. Stake must be currently inactive.
  string stake_account_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The address of the recipient account which will receive the withdrawn stake.
  string recipient_address = 2 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which has signing authority over withdrawing inactive stake from the stake account. Signs the transaction.
  string withdraw_authority = 3 [(google.api.field_behavior) = REQUIRED];

  // The amount to withdraw from the stake account, in Lamports.
  Amount amount = 4 [(google.api.field_behavior) = REQUIRED];

  // The parameters required to use a durable transaction nonce for Solana transactions.
  NonceOptions nonce_options = 5 [(google.api.field_behavior) = OPTIONAL];
}

// The parameters required for split stake action on Solana.
message SolanaSplitStakeParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Split Stake Parameters"}
  };

  // The address of the stake account will be split and have its stake removed.
  string stake_account_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The address of the new stake account which will be created and have the stake added to it.
  string new_stake_account_address = 2 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which has signing authority over staking operations on the stake account. Signs the transaction.
  string stake_authority = 3 [(google.api.field_behavior) = REQUIRED];

  // The amount of stake to split, in Lamports.
  Amount amount = 4 [(google.api.field_behavior) = REQUIRED];

  // The parameters required to use a durable transaction nonce for Solana transactions.
  NonceOptions nonce_options = 5 [(google.api.field_behavior) = OPTIONAL];
}

// The parameters required for merge stake action on Solana.
message SolanaMergeStakeParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Merge Stake Parameters"}
  };

  // The address of the stake account will be merged into and have stake added to it.
  string stake_account_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The address of the source stake account which will have no longer exist after the merge.
  string source_stake_account_address = 2 [(google.api.field_behavior) = REQUIRED];

  // The address of the account which has signing authority over staking operations on the stake account. Signs the transaction.
  string stake_authority = 3 [(google.api.field_behavior) = REQUIRED];

  // The parameters required to use a durable transaction nonce for Solana transactions.
  NonceOptions nonce_options = 4 [(google.api.field_behavior) = OPTIONAL];
}

// The parameters needed for staking on Solana
message SolanaStakingParameters {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {title: "Solana: Staking Parameters"}
  };

  oneof parameters {
    // The parameters for create stake account action on Solana.
    SolanaCreateStakeAccountParameters create_stake_parameters = 1;
    // The parameters for delegate stake action on Solana.
    SolanaDelegateStakeParameters delegate_stake_parameters = 2;
    // The parameters for deactivate stake action on Solana.
    SolanaDeactivateStakeParameters deactivate_stake_parameters = 3;
    // The parameters for withdraw stake action on Solana.
    SolanaWithdrawStakeParameters withdraw_stake_parameters = 4;
    // The parameters for split stake action on Solana.
    SolanaSplitStakeParameters split_stake_parameters = 5;
    // The parameters for merge stake action on Solana.
    SolanaMergeStakeParameters merge_stake_parameters = 6;
  }
}
